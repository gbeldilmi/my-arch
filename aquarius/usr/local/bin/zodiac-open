#!/usr/bin/env bash

_mountpoint="/mnt"
_key_device="/dev/disk/by-uuid/$KEY_UUID"
_backup_device="/dev/disk/by-uuid/$BACKUP_UUID"
_zodiac_device="/dev/disk/by-uuid/$ZODIAC_UUID"
_zext_device="/dev/disk/by-uuid/$ZEXT_UUID"
_backup_key_file="$_mountpoint/$BACKUP_KEY"
_zodiac_key_file="$_mountpoint/$ZODIAC_KEY"
_zext_key_file="$_mountpoint/$ZEXT_KEY"

function _beep() {
  echo -e '\a' > /dev/console
}

function _open_backup() {
  cryptsetup luksOpen "$_backup_device" backup --key-file "$_backup_key_file"
  mount /dev/mapper/backup /backup && echo "Backup mounted"
}

function _open_zodiac() {
  cryptsetup luksOpen "$_zodiac_device" zodiac --key-file "$_zodiac_key_file"
  mount /dev/mapper/zodiac /zodiac && echo "Zodiac mounted"
  exportfs -arv
}

function _open_zext() {
  ls /dev/disk/by-uuid | grep -q $ZEXT_UUID
  if [ $? -eq 0 ]
  then
    cryptsetup luksOpen "$_zext_device" zext --key-file "$_zext_key_file"
    mount /dev/mapper/zext /zext && echo "Zodiac external drive mounted"
  else
    echo "Zodiac external drive not connected"
  fi
}

function _run() {
  mount "$_key_device" "$_mountpoint"
  if [ $? -eq 0 ]
  then
    echo "Key mounted"
    if [ -f $_zodiac_key_file ] && [ -f $_backup_key_file ]
    then
      mount | grep -q /backup || _open_backup
      mount | grep -q /zodiac || _open_zodiac
      mount | grep -q /zext || _open_zext
    else
      echo "Key file not found"
      _beep
    fi
    umount "$_mountpoint" && echo "Key unmounted"
  fi
}

if [ "$EUID" -ne 0 ]
then
  echo "Please run as root"
else
  _beep
  _run
  _beep
fi

unset -f _beep
unset -f _open_backup
unset -f _open_zodiac
unset -f _open_zext
unset -f _run
